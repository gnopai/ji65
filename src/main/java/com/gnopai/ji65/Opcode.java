package com.gnopai.ji65;

import com.gnopai.ji65.address.AddressingModeType;
import com.gnopai.ji65.instruction.InstructionType;
import lombok.Getter;
import lombok.Value;

import java.util.Arrays;
import java.util.Map;
import java.util.Optional;
import java.util.function.Function;

import static com.gnopai.ji65.address.AddressingModeType.*;
import static com.gnopai.ji65.instruction.InstructionType.*;
import static java.util.Optional.ofNullable;
import static java.util.stream.Collectors.toMap;

@Getter
public enum Opcode {
    ADC_IMMEDIATE(ADC, IMMEDIATE, 0x69, 2),
    ADC_ZERO_PAGE(ADC, ZERO_PAGE, 0x65, 2),
    ADC_ZERO_PAGE_X(ADC, ZERO_PAGE_X, 0x75, 2),
    ADC_ABSOLUTE(ADC, ABSOLUTE, 0x6D, 3),
    ADC_ABSOLUTE_X(ADC, ABSOLUTE_X, 0x7D, 3),
    ADC_ABSOLUTE_Y(ADC, ABSOLUTE_Y, 0x79, 3),
    ADC_INDEXED_INDIRECT(ADC, INDEXED_INDIRECT, 0x61, 2),
    ADC_INDIRECT_INDEXED(ADC, INDIRECT_INDEXED, 0x71, 2),
    AND_IMMEDIATE(AND, IMMEDIATE, 0x29, 2),
    AND_ZERO_PAGE(AND, ZERO_PAGE, 0x25, 2),
    AND_ZERO_PAGE_X(AND, ZERO_PAGE_X, 0x35, 2),
    AND_ABSOLUTE(AND, ABSOLUTE, 0x2D, 3),
    AND_ABSOLUTE_X(AND, ABSOLUTE_X, 0x3D, 3),
    AND_ABSOLUTE_Y(AND, ABSOLUTE_Y, 0x39, 3),
    AND_INDEXED_INDIRECT(AND, INDEXED_INDIRECT, 0x21, 2),
    AND_INDIRECT_INDEXED(AND, INDIRECT_INDEXED, 0x31, 2),
    ASL_ACCUMULATOR(ASL, ACCUMULATOR, 0x0A, 1),
    ASL_ZERO_PAGE(ASL, ZERO_PAGE, 0x06, 2),
    ASL_ZERO_PAGE_X(ASL, ZERO_PAGE_X, 0x16, 2),
    ASL_ABSOLUTE(ASL, ABSOLUTE, 0x0E, 3),
    ASL_ABSOLUTE_X(ASL, ABSOLUTE_X, 0x1E, 3),
    BCC_RELATIVE(BCC, RELATIVE, 0x90, 2),
    BCS_RELATIVE(BCS, RELATIVE, 0xB0, 2),
    BEQ_RELATIVE(BEQ, RELATIVE, 0xF0, 2),
    BIT_ZERO_PAGE(BIT, ZERO_PAGE, 0x24, 2),
    BIT_ABSOLUTE(BIT, ABSOLUTE, 0x2C, 3),
    BMI_RELATIVE(BMI, RELATIVE, 0x30, 2),
    BNE_RELATIVE(BNE, RELATIVE, 0xD0, 2),
    BPL_RELATIVE(BPL, RELATIVE, 0x10, 2),
    BRK_IMPLICIT(BRK, IMPLICIT, 0x00, 1),
    BVC_RELATIVE(BVC, RELATIVE, 0x50, 2),
    BVS_RELATIVE(BVS, RELATIVE, 0x70, 2),
    CLC_IMPLICIT(CLC, IMPLICIT, 0x18, 1),
    CLD_IMPLICIT(CLD, IMPLICIT, 0xD8, 1),
    CLI_IMPLICIT(CLI, IMPLICIT, 0x58, 1),
    CLV_IMPLICIT(CLV, IMPLICIT, 0xB8, 1),
    CMP_IMMEDIATE(CMP, IMMEDIATE, 0xC9, 2),
    CMP_ZERO_PAGE(CMP, ZERO_PAGE, 0xC5, 2),
    CMP_ZERO_PAGE_X(CMP, ZERO_PAGE_X, 0xD5, 2),
    CMP_ABSOLUTE(CMP, ABSOLUTE, 0xCD, 3),
    CMP_ABSOLUTE_X(CMP, ABSOLUTE_X, 0xDD, 3),
    CMP_ABSOLUTE_Y(CMP, ABSOLUTE_Y, 0xD9, 3),
    CMP_INDEXED_INDIRECT(CMP, INDEXED_INDIRECT, 0xC1, 2),
    CMP_INDIRECT_INDEXED(CMP, INDIRECT_INDEXED, 0xD1, 2),
    CPX_IMMEDIATE(CPX, IMMEDIATE, 0xE0, 2),
    CPX_ZERO_PAGE(CPX, ZERO_PAGE, 0xE4, 2),
    CPX_ABSOLUTE(CPX, ABSOLUTE, 0xEC, 3),
    CPY_IMMEDIATE(CPY, IMMEDIATE, 0xC0, 2),
    CPY_ZERO_PAGE(CPY, ZERO_PAGE, 0xC4, 2),
    CPY_ABSOLUTE(CPY, ABSOLUTE, 0xCC, 3),
    DEC_ZERO_PAGE(DEC, ZERO_PAGE, 0xC6, 2),
    DEC_ZERO_PAGE_X(DEC, ZERO_PAGE_X, 0xD6, 2),
    DEC_ABSOLUTE(DEC, ABSOLUTE, 0xCE, 3),
    DEC_ABSOLUTE_X(DEC, ABSOLUTE_X, 0xDE, 3),
    DEX_IMPLICIT(DEX, IMPLICIT, 0xCA, 1),
    DEY_IMPLICIT(DEY, IMPLICIT, 0x88, 1),
    EOR_IMMEDIATE(EOR, IMMEDIATE, 0x49, 2),
    EOR_ZERO_PAGE(EOR, ZERO_PAGE, 0x45, 2),
    EOR_ZERO_PAGE_X(EOR, ZERO_PAGE_X, 0x55, 2),
    EOR_ABSOLUTE(EOR, ABSOLUTE, 0x4D, 3),
    EOR_ABSOLUTE_X(EOR, ABSOLUTE_X, 0x5D, 3),
    EOR_ABSOLUTE_Y(EOR, ABSOLUTE_Y, 0x59, 3),
    EOR_INDEXED_INDIRECT(EOR, INDEXED_INDIRECT, 0x41, 2),
    EOR_INDIRECT_INDEXED(EOR, INDIRECT_INDEXED, 0x51, 2),
    INC_ZERO_PAGE(INC, ZERO_PAGE, 0xE6, 2),
    INC_ZERO_PAGE_X(INC, ZERO_PAGE_X, 0xF6, 2),
    INC_ABSOLUTE(INC, ABSOLUTE, 0xEE, 3),
    INC_ABSOLUTE_X(INC, ABSOLUTE_X, 0xFE, 3),
    INX_IMPLICIT(INX, IMPLICIT, 0xE8, 1),
    INY_IMPLICIT(INY, IMPLICIT, 0xC8, 1),
    JMP_ABSOLUTE(JMP, ABSOLUTE, 0x4C, 3),
    JMP_INDIRECT(JMP, INDIRECT, 0x6C, 3),
    JSR_ABSOLUTE(JSR, ABSOLUTE, 0x20, 3),
    LDA_IMMEDIATE(LDA, IMMEDIATE, 0xA9, 2),
    LDA_ZERO_PAGE(LDA, ZERO_PAGE, 0xA5, 2),
    LDA_ZERO_PAGE_X(LDA, ZERO_PAGE_X, 0xB5, 2),
    LDA_ABSOLUTE(LDA, ABSOLUTE, 0xAD, 3),
    LDA_ABSOLUTE_X(LDA, ABSOLUTE_X, 0xBD, 3),
    LDA_ABSOLUTE_Y(LDA, ABSOLUTE_Y, 0xB9, 3),
    LDA_INDEXED_INDIRECT(LDA, INDEXED_INDIRECT, 0xA1, 2),
    LDA_INDIRECT_INDEXED(LDA, INDIRECT_INDEXED, 0xB1, 2),
    LDX_IMMEDIATE(LDX, IMMEDIATE, 0xA2, 2),
    LDX_ZERO_PAGE(LDX, ZERO_PAGE, 0xA6, 2),
    LDX_ZERO_PAGE_Y(LDX, ZERO_PAGE_Y, 0xB6, 2),
    LDX_ABSOLUTE(LDX, ABSOLUTE, 0xAE, 3),
    LDX_ABSOLUTE_Y(LDX, ABSOLUTE_Y, 0xBE, 3),
    LDY_IMMEDIATE(LDY, IMMEDIATE, 0xA0, 2),
    LDY_ZERO_PAGE(LDY, ZERO_PAGE, 0xA4, 2),
    LDY_ZERO_PAGE_X(LDY, ZERO_PAGE_X, 0xB4, 2),
    LDY_ABSOLUTE(LDY, ABSOLUTE, 0xAC, 3),
    LDY_ABSOLUTE_X(LDY, ABSOLUTE_X, 0xBC, 3),
    LSR_ACCUMULATOR(LSR, ACCUMULATOR, 0x4A, 1),
    LSR_ZERO_PAGE(LSR, ZERO_PAGE, 0x46, 2),
    LSR_ZERO_PAGE_X(LSR, ZERO_PAGE_X, 0x56, 2),
    LSR_ABSOLUTE(LSR, ABSOLUTE, 0x4E, 3),
    LSR_ABSOLUTE_X(LSR, ABSOLUTE_X, 0x5E, 3),
    NOP_IMPLICIT(NOP, IMPLICIT, 0xEA, 1),
    ORA_IMMEDIATE(ORA, IMMEDIATE, 0x09, 2),
    ORA_ZERO_PAGE(ORA, ZERO_PAGE, 0x05, 2),
    ORA_ZERO_PAGE_X(ORA, ZERO_PAGE_X, 0x15, 2),
    ORA_ABSOLUTE(ORA, ABSOLUTE, 0x0D, 3),
    ORA_ABSOLUTE_X(ORA, ABSOLUTE_X, 0x1D, 3),
    ORA_ABSOLUTE_Y(ORA, ABSOLUTE_Y, 0x19, 3),
    ORA_INDEXED_INDIRECT(ORA, INDEXED_INDIRECT, 0x01, 2),
    ORA_INDIRECT_INDEXED(ORA, INDIRECT_INDEXED, 0x11, 2),
    PHA_IMPLICIT(PHA, IMPLICIT, 0x48, 1),
    PHP_IMPLICIT(PHP, IMPLICIT, 0x08, 1),
    PLA_IMPLICIT(PLA, IMPLICIT, 0x68, 1),
    PLP_IMPLICIT(PLP, IMPLICIT, 0x28, 1),
    ROL_ACCUMULATOR(ROL, ACCUMULATOR, 0x2A, 1),
    ROL_ZERO_PAGE(ROL, ZERO_PAGE, 0x26, 2),
    ROL_ZERO_PAGE_X(ROL, ZERO_PAGE_X, 0x36, 2),
    ROL_ABSOLUTE(ROL, ABSOLUTE, 0x2E, 3),
    ROL_ABSOLUTE_X(ROL, ABSOLUTE_X, 0x3E, 3),
    ROR_ACCUMULATOR(ROR, ACCUMULATOR, 0x6A, 1),
    ROR_ZERO_PAGE(ROR, ZERO_PAGE, 0x66, 2),
    ROR_ZERO_PAGE_X(ROR, ZERO_PAGE_X, 0x76, 2),
    ROR_ABSOLUTE(ROR, ABSOLUTE, 0x6E, 3),
    ROR_ABSOLUTE_X(ROR, ABSOLUTE_X, 0x7E, 3),
    RTI_IMPLICIT(RTI, IMPLICIT, 0x40, 1),
    RTS_IMPLICIT(RTS, IMPLICIT, 0x60, 1),
    SBC_IMMEDIATE(SBC, IMMEDIATE, 0xE9, 2),
    SBC_ZERO_PAGE(SBC, ZERO_PAGE, 0xE5, 2),
    SBC_ZERO_PAGE_X(SBC, ZERO_PAGE_X, 0xF5, 2),
    SBC_ABSOLUTE(SBC, ABSOLUTE, 0xED, 3),
    SBC_ABSOLUTE_X(SBC, ABSOLUTE_X, 0xFD, 3),
    SBC_ABSOLUTE_Y(SBC, ABSOLUTE_Y, 0xF9, 3),
    SBC_INDEXED_INDIRECT(SBC, INDEXED_INDIRECT, 0xE1, 2),
    SBC_INDIRECT_INDEXED(SBC, INDIRECT_INDEXED, 0xF1, 2),
    SEC_IMPLICIT(SEC, IMPLICIT, 0x38, 1),
    SED_IMPLICIT(SED, IMPLICIT, 0xF8, 1),
    SEI_IMPLICIT(SEI, IMPLICIT, 0x78, 1),
    STA_ZERO_PAGE(STA, ZERO_PAGE, 0x85, 2),
    STA_ZERO_PAGE_X(STA, ZERO_PAGE_X, 0x95, 2),
    STA_ABSOLUTE(STA, ABSOLUTE, 0x8D, 3),
    STA_ABSOLUTE_X(STA, ABSOLUTE_X, 0x9D, 3),
    STA_ABSOLUTE_Y(STA, ABSOLUTE_Y, 0x99, 3),
    STA_INDEXED_INDIRECT(STA, INDEXED_INDIRECT, 0x81, 2),
    STA_INDIRECT_INDEXED(STA, INDIRECT_INDEXED, 0x91, 2),
    STX_ZERO_PAGE(STX, ZERO_PAGE, 0x86, 2),
    STX_ZERO_PAGE_Y(STX, ZERO_PAGE_Y, 0x96, 2),
    STX_ABSOLUTE(STX, ABSOLUTE, 0x8E, 3),
    STY_ZERO_PAGE(STY, ZERO_PAGE, 0x84, 2),
    STY_ZERO_PAGE_X(STY, ZERO_PAGE_X, 0x94, 2),
    STY_ABSOLUTE(STY, ABSOLUTE, 0x8C, 3),
    TAX_IMPLICIT(TAX, IMPLICIT, 0xAA, 1),
    TAY_IMPLICIT(TAY, IMPLICIT, 0xA8, 1),
    TSX_IMPLICIT(TSX, IMPLICIT, 0xBA, 1),
    TXA_IMPLICIT(TXA, IMPLICIT, 0x8A, 1),
    TXS_IMPLICIT(TXS, IMPLICIT, 0x9A, 1),
    TYA_IMPLICIT(TYA, IMPLICIT, 0x98, 1),
    ;

    private final InstructionType instructionType;
    private final byte opcode;
    private final AddressingModeType addressingModeType;
    private final int byteCount;

    Opcode(InstructionType instructionType, AddressingModeType addressingModeType, int opcode, int byteCount) {
        this.instructionType = instructionType;
        this.opcode = (byte) opcode;
        this.addressingModeType = addressingModeType;
        this.byteCount = byteCount;
    }

    @Value
    private static class OpcodeKey {
        InstructionType instructionType;
        AddressingModeType addressingModeType;
    }

    private final static Map<OpcodeKey, Opcode> BY_OPCODE_KEY = Arrays.stream(values())
            .collect(toMap(
                    opcode -> new OpcodeKey(opcode.getInstructionType(), opcode.getAddressingModeType()),
                    Function.identity()));

    public static Optional<Opcode> of(InstructionType instructionType, AddressingModeType addressingModeType) {
        OpcodeKey opcodeKey = new OpcodeKey(instructionType, addressingModeType);
        return ofNullable(BY_OPCODE_KEY.get(opcodeKey));
    }
}
